{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/:path*",
      "headers": [
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-XSS-Protection",
          "value": "1; mode=block"
        }
      ],
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    }
  ],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/clients/[id]/edit",
      "regex": "^/clients/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/clients/(?<nxtPid>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/invoices/[id]",
      "regex": "^/invoices/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/invoices/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/invoices/[id]/edit",
      "regex": "^/invoices/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/invoices/(?<nxtPid>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/products/[id]/edit",
      "regex": "^/products/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/products/(?<nxtPid>[^/]+?)/edit(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/activity-logs",
      "regex": "^/admin/activity\\-logs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/activity\\-logs(?:/)?$"
    },
    {
      "page": "/admin/settings",
      "regex": "^/admin/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/settings(?:/)?$"
    },
    {
      "page": "/admin/support-tickets",
      "regex": "^/admin/support\\-tickets(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/support\\-tickets(?:/)?$"
    },
    {
      "page": "/admin/users",
      "regex": "^/admin/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/users(?:/)?$"
    },
    {
      "page": "/clients",
      "regex": "^/clients(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/clients(?:/)?$"
    },
    {
      "page": "/clients/create",
      "regex": "^/clients/create(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/clients/create(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/forgot-password",
      "regex": "^/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/forgot\\-password(?:/)?$"
    },
    {
      "page": "/invoices",
      "regex": "^/invoices(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/invoices(?:/)?$"
    },
    {
      "page": "/invoices/create",
      "regex": "^/invoices/create(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/invoices/create(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/products",
      "regex": "^/products(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/products(?:/)?$"
    },
    {
      "page": "/products/create",
      "regex": "^/products/create(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/products/create(?:/)?$"
    },
    {
      "page": "/register",
      "regex": "^/register(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/register(?:/)?$"
    },
    {
      "page": "/reports",
      "regex": "^/reports(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/reports(?:/)?$"
    },
    {
      "page": "/reset-password",
      "regex": "^/reset\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/reset\\-password(?:/)?$"
    },
    {
      "page": "/settings",
      "regex": "^/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings(?:/)?$"
    },
    {
      "page": "/settings/payments",
      "regex": "^/settings/payments(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings/payments(?:/)?$"
    },
    {
      "page": "/super-admin",
      "regex": "^/super\\-admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/super\\-admin(?:/)?$"
    },
    {
      "page": "/super-admin/activity-logs",
      "regex": "^/super\\-admin/activity\\-logs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/super\\-admin/activity\\-logs(?:/)?$"
    },
    {
      "page": "/super-admin/admins",
      "regex": "^/super\\-admin/admins(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/super\\-admin/admins(?:/)?$"
    },
    {
      "page": "/super-admin/settings",
      "regex": "^/super\\-admin/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/super\\-admin/settings(?:/)?$"
    },
    {
      "page": "/super-admin/statistics",
      "regex": "^/super\\-admin/statistics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/super\\-admin/statistics(?:/)?$"
    },
    {
      "page": "/super-admin/users",
      "regex": "^/super\\-admin/users(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/super\\-admin/users(?:/)?$"
    },
    {
      "page": "/verify-email",
      "regex": "^/verify\\-email(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/verify\\-email(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}